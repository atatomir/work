variable xme
variable yme
variable xpa
variable ypa
variable xde
variable yde
variable xva
variable yva
variable room 3025 cells
variable aux_room 3025 cells
variable xne
variable yne
variable i
variable j
variable aux
variable aux2
variable x
variable y
variable xx
variable yy
variable dir
variable dir2
variable l
variable r
variable qx 3025 cells
variable qy 3025 cells
variable ddx 6 cells
variable ddy 6 cells
variable jobs
variable step
variable lxpa 1111 cells
variable lypa 1111 cells
variable lxde 1111 cells
variable lyde 1111 cells
variable cntpa
variable cntde
variable current_job
variable lxaux 1111 cells
variable lyaux 1111 cells
variable smxx
variable smyy
variable smaux
variable bestpair
variable bestdist
variable deltax
variable deltay
variable temp
variable xpa2
variable ypa2
variable auxv
variable helper
variable cntblack
variable nhelp
variable mhelp
variable llxpa 1111 cells
variable llypa 1111 cells
variable llxde 1111 cells
variable llyde 1111 cells
variable valid 3025 cells
variable useless
variable dist 3025 cells
variable actdist
variable newdist
variable idist
variable jdist
variable xdist
variable ydist
variable shuffleid 1111 cells
variable additcnt
variable additfr 1111 cells
variable additse 1111 cells
0 aux !
0 i !
i @ 
input_rows @ 
 < 
while
0 j !
j @ 
input_cols @ 
 < 
while
0 room
aux @ 
+ !
aux @ 
1 + aux !
j @ 
1 + j !
j @ 
input_cols @ 
 < 
repeat
i @ 
1 + i !
i @ 
input_rows @ 
 < 
repeat
step @ 
1 + step !
0 jobs !
0 cntpa !
0 cntde !
0 i !
i @ 
input_objects_count @ 
 < 
while
i @ 
aux !
aux @ 
3 * aux !
aux @ 
aux2 !
aux2 @ 
1 + aux2 !
input_objects
aux2 @ 
+ @ 
y !
aux @ 
aux2 !
aux2 @ 
2 + aux2 !
input_objects
aux2 @ 
+ @ 
x !
input_objects 
aux @ 
 + @ 1 =
if
x @ 
aux2 !
aux2 @ 
input_cols @ 
 * aux2 !
aux2 @ 
y @ 
 + aux2 !
-1 room
aux2 @ 
+ !
then
input_objects 
aux @ 
 + @ 2 =
if
x @ 
lxpa
cntpa @ 
+ !
y @ 
lypa
cntpa @ 
+ !
cntpa @ 
1 + cntpa !
jobs @ 
1 + jobs !
x @ 
aux2 !
aux2 @ 
input_cols @ 
 * aux2 !
aux2 @ 
y @ 
 + aux2 !
-1 room
aux2 @ 
+ !
then
input_objects 
aux @ 
 + @ 3 =
if
x @ 
lxde
cntde @ 
+ !
y @ 
lyde
cntde @ 
+ !
cntde @ 
1 + cntde !
then
input_objects 
aux @ 
 + @ 4 =
if
x @ 
xme !
y @ 
yme !
then
input_objects 
aux @ 
 + @ 5 =
if
x @ 
xva !
y @ 
yva !
x @ 
aux2 !
aux2 @ 
input_cols @ 
 * aux2 !
aux2 @ 
y @ 
 + aux2 !
-1 room
aux2 @ 
+ !
then
i @ 
1 + i !
i @ 
input_objects_count @ 
 < 
repeat
(!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!)
step @ 
1 = 
if
0 aux !
0 idist !
idist @ 
input_rows @ 
 < 
while
0 jdist !
jdist @ 
input_cols @ 
 < 
while
room
aux @ 
+ @ 
aux_room
aux @ 
+ !
100000 dist
aux @ 
+ !
aux @ 
1 + aux !
jdist @ 
1 + jdist !
jdist @ 
input_cols @ 
 < 
repeat
idist @ 
1 + idist !
idist @ 
input_rows @ 
 < 
repeat
0 idist !
idist @ 
jobs @ 
 < 
while
lxpa
idist @ 
+ @ 
aux !
lypa
idist @ 
+ @ 
aux2 !
aux @ 
input_cols @ 
 * aux !
aux @ 
aux2 @ 
 + aux !
0 aux_room
aux @ 
+ !
lxde
idist @ 
+ @ 
aux !
lyde
idist @ 
+ @ 
aux2 !
aux @ 
input_cols @ 
 * aux !
aux @ 
aux2 @ 
 + aux !
0 aux_room
aux @ 
+ !
idist @ 
1 + idist !
idist @ 
jobs @ 
 < 
repeat
0 l !
0 r !
xme @ 
qx 0 + !
yme @ 
qy 0 + !
xme @ 
aux !
aux @ 
input_cols @ 
 * aux !
aux @ 
yme @ 
 + aux !
aux_room 
aux @ 
 + @ -1 =
if
l @ 
1 + l !
then
1 dist
aux @ 
+ !
1 aux_room
aux @ 
+ !
l @ 
r @ 
<= 
while
qx
l @ 
+ @ 
xdist !
qy
l @ 
+ @ 
ydist !
l @ 
1 + l !
xdist @ 
aux !
aux @ 
input_cols @ 
 * aux !
aux @ 
ydist @ 
 + aux !
dist
aux @ 
+ @ 
actdist !
actdist @ 
newdist !
newdist @ 
1 + newdist !
xdist @ 
xx !
xx @ 
-1 + xx !
ydist @ 
yy !
yy @ 
0 + yy !
xx @ 
aux !
aux @ 
input_cols @ 
 * aux !
aux @ 
yy @ 
 + aux !
aux_room
aux @ 
 + @ 
if
else
newdist @ 
dist
aux @ 
+ !
2 aux_room
aux @ 
+ !
r @ 
1 + r !
xx @ 
qx
r @ 
+ !
yy @ 
qy
r @ 
+ !
then
xdist @ 
xx !
xx @ 
1 + xx !
ydist @ 
yy !
yy @ 
0 + yy !
xx @ 
aux !
aux @ 
input_cols @ 
 * aux !
aux @ 
yy @ 
 + aux !
aux_room
aux @ 
 + @ 
if
else
newdist @ 
dist
aux @ 
+ !
1 aux_room
aux @ 
+ !
r @ 
1 + r !
xx @ 
qx
r @ 
+ !
yy @ 
qy
r @ 
+ !
then
xdist @ 
xx !
xx @ 
0 + xx !
ydist @ 
yy !
yy @ 
-1 + yy !
xx @ 
aux !
aux @ 
input_cols @ 
 * aux !
aux @ 
yy @ 
 + aux !
aux_room
aux @ 
 + @ 
if
else
newdist @ 
dist
aux @ 
+ !
4 aux_room
aux @ 
+ !
r @ 
1 + r !
xx @ 
qx
r @ 
+ !
yy @ 
qy
r @ 
+ !
then
xdist @ 
xx !
xx @ 
0 + xx !
ydist @ 
yy !
yy @ 
1 + yy !
xx @ 
aux !
aux @ 
input_cols @ 
 * aux !
aux @ 
yy @ 
 + aux !
aux_room
aux @ 
 + @ 
if
else
newdist @ 
dist
aux @ 
+ !
3 aux_room
aux @ 
+ !
r @ 
1 + r !
xx @ 
qx
r @ 
+ !
yy @ 
qy
r @ 
+ !
then
l @ 
r @ 
<= 
repeat
0 i !
i @ 
jobs @ 
 < 
while
i @ 
bestpair !
100000 bestdist !
i @ 
j !
j @ 
jobs @ 
 < 
while
lxpa
j @ 
+ @ 
aux !
lypa
j @ 
+ @ 
aux2 !
aux @ 
input_cols @ 
 * aux !
aux @ 
aux2 @ 
 + aux !
dist
aux @ 
+ @ 
actdist !
actdist @ 
bestdist @ 
 < 
if
actdist @ 
bestdist !
j @ 
bestpair !
then
j @ 
1 + j !
j @ 
jobs @ 
 < 
repeat
lxpa
i @ 
 + @ 
lxpa
bestpair @ 
 + @ 
lxpa 
i @ 
+ !
lxpa 
bestpair @ 
+ !
lypa
i @ 
 + @ 
lypa
bestpair @ 
 + @ 
lypa 
i @ 
+ !
lypa 
bestpair @ 
+ !
bestpair @ 
shuffleid
i @ 
+ !
i @ 
1 + i !
i @ 
jobs @ 
 < 
repeat
0 i !
i @ 
jobs @ 
 < 
while
i @ 
bestpair !
100000 bestdist !
lxpa
i @ 
+ @ 
x !
lypa
i @ 
+ @ 
y !
0 aux !
0 idist !
idist @ 
input_rows @ 
 < 
while
0 jdist !
jdist @ 
input_cols @ 
 < 
while
room
aux @ 
+ @ 
aux_room
aux @ 
+ !
100000 dist
aux @ 
+ !
aux @ 
1 + aux !
jdist @ 
1 + jdist !
jdist @ 
input_cols @ 
 < 
repeat
idist @ 
1 + idist !
idist @ 
input_rows @ 
 < 
repeat
0 idist !
idist @ 
jobs @ 
 < 
while
lxpa
idist @ 
+ @ 
aux !
lypa
idist @ 
+ @ 
aux2 !
aux @ 
input_cols @ 
 * aux !
aux @ 
aux2 @ 
 + aux !
0 aux_room
aux @ 
+ !
lxde
idist @ 
+ @ 
aux !
lyde
idist @ 
+ @ 
aux2 !
aux @ 
input_cols @ 
 * aux !
aux @ 
aux2 @ 
 + aux !
0 aux_room
aux @ 
+ !
idist @ 
1 + idist !
idist @ 
jobs @ 
 < 
repeat
0 l !
0 r !
x @ 
qx 0 + !
y @ 
qy 0 + !
x @ 
aux !
aux @ 
input_cols @ 
 * aux !
aux @ 
y @ 
 + aux !
aux_room 
aux @ 
 + @ -1 =
if
l @ 
1 + l !
then
1 dist
aux @ 
+ !
1 aux_room
aux @ 
+ !
l @ 
r @ 
<= 
while
qx
l @ 
+ @ 
xdist !
qy
l @ 
+ @ 
ydist !
l @ 
1 + l !
xdist @ 
aux !
aux @ 
input_cols @ 
 * aux !
aux @ 
ydist @ 
 + aux !
dist
aux @ 
+ @ 
actdist !
actdist @ 
newdist !
newdist @ 
1 + newdist !
xdist @ 
xx !
xx @ 
-1 + xx !
ydist @ 
yy !
yy @ 
0 + yy !
xx @ 
aux !
aux @ 
input_cols @ 
 * aux !
aux @ 
yy @ 
 + aux !
aux_room
aux @ 
 + @ 
if
else
newdist @ 
dist
aux @ 
+ !
2 aux_room
aux @ 
+ !
r @ 
1 + r !
xx @ 
qx
r @ 
+ !
yy @ 
qy
r @ 
+ !
then
xdist @ 
xx !
xx @ 
1 + xx !
ydist @ 
yy !
yy @ 
0 + yy !
xx @ 
aux !
aux @ 
input_cols @ 
 * aux !
aux @ 
yy @ 
 + aux !
aux_room
aux @ 
 + @ 
if
else
newdist @ 
dist
aux @ 
+ !
1 aux_room
aux @ 
+ !
r @ 
1 + r !
xx @ 
qx
r @ 
+ !
yy @ 
qy
r @ 
+ !
then
xdist @ 
xx !
xx @ 
0 + xx !
ydist @ 
yy !
yy @ 
-1 + yy !
xx @ 
aux !
aux @ 
input_cols @ 
 * aux !
aux @ 
yy @ 
 + aux !
aux_room
aux @ 
 + @ 
if
else
newdist @ 
dist
aux @ 
+ !
4 aux_room
aux @ 
+ !
r @ 
1 + r !
xx @ 
qx
r @ 
+ !
yy @ 
qy
r @ 
+ !
then
xdist @ 
xx !
xx @ 
0 + xx !
ydist @ 
yy !
yy @ 
1 + yy !
xx @ 
aux !
aux @ 
input_cols @ 
 * aux !
aux @ 
yy @ 
 + aux !
aux_room
aux @ 
 + @ 
if
else
newdist @ 
dist
aux @ 
+ !
3 aux_room
aux @ 
+ !
r @ 
1 + r !
xx @ 
qx
r @ 
+ !
yy @ 
qy
r @ 
+ !
then
l @ 
r @ 
<= 
repeat
i @ 
j !
j @ 
jobs @ 
 < 
while
lxde
j @ 
+ @ 
aux !
lyde
j @ 
+ @ 
aux2 !
aux @ 
input_cols @ 
 * aux !
aux @ 
aux2 @ 
 + aux !
dist
aux @ 
+ @ 
actdist !
actdist @ 
bestdist @ 
 < 
if
actdist @ 
bestdist !
j @ 
bestpair !
then
j @ 
1 + j !
j @ 
jobs @ 
 < 
repeat
lxde
i @ 
 + @ 
lxde
bestpair @ 
 + @ 
lxde 
i @ 
+ !
lxde 
bestpair @ 
+ !
lyde
i @ 
 + @ 
lyde
bestpair @ 
 + @ 
lyde 
i @ 
+ !
lyde 
bestpair @ 
+ !
i @ 
1 + i !
i @ 
jobs @ 
 < 
repeat
0 i !
i @ 
jobs @ 
 < 
while
lxde
i @ 
+ @ 
llxde
i @ 
+ !
i @ 
1 + i !
i @ 
jobs @ 
 < 
repeat
0 i !
i @ 
jobs @ 
 < 
while
lyde
i @ 
+ @ 
llyde
i @ 
+ !
i @ 
1 + i !
i @ 
jobs @ 
 < 
repeat
else
0 i !
i @ 
jobs @ 
 < 
while
shuffleid
i @ 
+ @ 
aux !
lxpa
i @ 
 + @ 
lxpa
aux @ 
 + @ 
lxpa 
i @ 
+ !
lxpa 
aux @ 
+ !
lypa
i @ 
 + @ 
lypa
aux @ 
 + @ 
lypa 
i @ 
+ !
lypa 
aux @ 
+ !
i @ 
1 + i !
i @ 
jobs @ 
 < 
repeat
0 i !
i @ 
jobs @ 
 < 
while
llxde
i @ 
+ @ 
lxde
i @ 
+ !
i @ 
1 + i !
i @ 
jobs @ 
 < 
repeat
0 i !
i @ 
jobs @ 
 < 
while
llyde
i @ 
+ @ 
lyde
i @ 
+ !
i @ 
1 + i !
i @ 
jobs @ 
 < 
repeat
then
current_job @ 
jobs @ 
>= 
if
-1 quit
then
lxpa
current_job @ 
+ @ 
xpa !
lypa
current_job @ 
+ @ 
ypa !
lxde
current_job @ 
+ @ 
xde !
lyde
current_job @ 
+ @ 
yde !
xpa @ 
xde @ 
=
if
ypa @ 
yde @ 
=
if
current_job @ 
1 + current_job !
current_job @ 
jobs @ 
>= 
if
-1 quit
then
then
then
lxpa
current_job @ 
+ @ 
xpa !
lypa
current_job @ 
+ @ 
ypa !
lxde
current_job @ 
+ @ 
xde !
lyde
current_job @ 
+ @ 
yde !
xpa @ 
aux2 !
aux2 @ 
input_cols @ 
 * aux2 !
aux2 @ 
ypa @ 
 + aux2 !
0 room
aux2 @ 
+ !
0 aux !
0 i !
i @ 
input_rows @ 
 < 
while
0 j !
j @ 
input_cols @ 
 < 
while
room
aux @ 
+ @ 
aux_room
aux @ 
+ !
aux @ 
1 + aux !
j @ 
1 + j !
j @ 
input_cols @ 
 < 
repeat
i @ 
1 + i !
i @ 
input_rows @ 
 < 
repeat
0 l !
0 r !
xde @ 
qx 0 + !
yde @ 
qy 0 + !
xde @ 
aux !
aux @ 
input_cols @ 
 * aux !
aux @ 
yde @ 
 + aux !
aux_room 
aux @ 
 + @ -1 =
if
l @ 
1 + l !
then
1 aux_room
aux @ 
+ !
l @ 
r @ 
<= 
while
qx
l @ 
+ @ 
x !
qy
l @ 
+ @ 
y !
l @ 
1 + l !
x @ 
xx !
xx @ 
-1 + xx !
y @ 
yy !
yy @ 
0 + yy !
xx @ 
aux !
aux @ 
input_cols @ 
 * aux !
aux @ 
yy @ 
 + aux !
aux_room
aux @ 
 + @ 
if
else
xx @ 
smxx !
smxx @ 
-1 + smxx !
yy @ 
smyy !
smyy @ 
0 + smyy !
smxx @ 
smaux !
smaux @ 
input_cols @ 
 * smaux !
smaux @ 
smyy @ 
 + smaux !
aux_room 
smaux @ 
 + @ -1 =
if
else
2 aux_room
aux @ 
+ !
r @ 
1 + r !
xx @ 
qx
r @ 
+ !
yy @ 
qy
r @ 
+ !
then
then
x @ 
xx !
xx @ 
1 + xx !
y @ 
yy !
yy @ 
0 + yy !
xx @ 
aux !
aux @ 
input_cols @ 
 * aux !
aux @ 
yy @ 
 + aux !
aux_room
aux @ 
 + @ 
if
else
xx @ 
smxx !
smxx @ 
1 + smxx !
yy @ 
smyy !
smyy @ 
0 + smyy !
smxx @ 
smaux !
smaux @ 
input_cols @ 
 * smaux !
smaux @ 
smyy @ 
 + smaux !
aux_room 
smaux @ 
 + @ -1 =
if
else
1 aux_room
aux @ 
+ !
r @ 
1 + r !
xx @ 
qx
r @ 
+ !
yy @ 
qy
r @ 
+ !
then
then
x @ 
xx !
xx @ 
0 + xx !
y @ 
yy !
yy @ 
-1 + yy !
xx @ 
aux !
aux @ 
input_cols @ 
 * aux !
aux @ 
yy @ 
 + aux !
aux_room
aux @ 
 + @ 
if
else
xx @ 
smxx !
smxx @ 
0 + smxx !
yy @ 
smyy !
smyy @ 
-1 + smyy !
smxx @ 
smaux !
smaux @ 
input_cols @ 
 * smaux !
smaux @ 
smyy @ 
 + smaux !
aux_room 
smaux @ 
 + @ -1 =
if
else
4 aux_room
aux @ 
+ !
r @ 
1 + r !
xx @ 
qx
r @ 
+ !
yy @ 
qy
r @ 
+ !
then
then
x @ 
xx !
xx @ 
0 + xx !
y @ 
yy !
yy @ 
1 + yy !
xx @ 
aux !
aux @ 
input_cols @ 
 * aux !
aux @ 
yy @ 
 + aux !
aux_room
aux @ 
 + @ 
if
else
xx @ 
smxx !
smxx @ 
0 + smxx !
yy @ 
smyy !
smyy @ 
1 + smyy !
smxx @ 
smaux !
smaux @ 
input_cols @ 
 * smaux !
smaux @ 
smyy @ 
 + smaux !
aux_room 
smaux @ 
 + @ -1 =
if
else
3 aux_room
aux @ 
+ !
r @ 
1 + r !
xx @ 
qx
r @ 
+ !
yy @ 
qy
r @ 
+ !
then
then
l @ 
r @ 
<= 
repeat
xpa @ 
aux !
aux @ 
input_cols @ 
 * aux !
aux @ 
ypa @ 
 + aux !
aux_room
aux @ 
+ @ 
dir !
-1 ddx 1 + !
1 ddx 2 + !
0 ddx 3 + !
0 ddx 4 + !
0 ddy 1 + !
0 ddy 2 + !
-1 ddy 3 + !
1 ddy 4 + !
xpa @ 
xne !
ypa @ 
yne !
xne @ 
ddx
dir @ 
 + @ 
-
xne!
yne @ 
ddy
dir @ 
 + @ 
-
yne!
xpa @ 
aux2 !
aux2 @ 
input_cols @ 
 * aux2 !
aux2 @ 
ypa @ 
 + aux2 !
-1 room
aux2 @ 
+ !
0 aux !
0 i !
i @ 
input_rows @ 
 < 
while
0 j !
j @ 
input_cols @ 
 < 
while
room
aux @ 
+ @ 
aux_room
aux @ 
+ !
aux @ 
1 + aux !
j @ 
1 + j !
j @ 
input_cols @ 
 < 
repeat
i @ 
1 + i !
i @ 
input_rows @ 
 < 
repeat
0 l !
0 r !
xne @ 
qx 0 + !
yne @ 
qy 0 + !
xne @ 
aux !
aux @ 
input_cols @ 
 * aux !
aux @ 
yne @ 
 + aux !
aux_room 
aux @ 
 + @ -1 =
if
l @ 
1 + l !
then
1 aux_room
aux @ 
+ !
l @ 
r @ 
<= 
while
qx
l @ 
+ @ 
x !
qy
l @ 
+ @ 
y !
l @ 
1 + l !
x @ 
xx !
xx @ 
-1 + xx !
y @ 
yy !
yy @ 
0 + yy !
xx @ 
aux !
aux @ 
input_cols @ 
 * aux !
aux @ 
yy @ 
 + aux !
aux_room
aux @ 
 + @ 
if
else
2 aux_room
aux @ 
+ !
r @ 
1 + r !
xx @ 
qx
r @ 
+ !
yy @ 
qy
r @ 
+ !
then
x @ 
xx !
xx @ 
1 + xx !
y @ 
yy !
yy @ 
0 + yy !
xx @ 
aux !
aux @ 
input_cols @ 
 * aux !
aux @ 
yy @ 
 + aux !
aux_room
aux @ 
 + @ 
if
else
1 aux_room
aux @ 
+ !
r @ 
1 + r !
xx @ 
qx
r @ 
+ !
yy @ 
qy
r @ 
+ !
then
x @ 
xx !
xx @ 
0 + xx !
y @ 
yy !
yy @ 
-1 + yy !
xx @ 
aux !
aux @ 
input_cols @ 
 * aux !
aux @ 
yy @ 
 + aux !
aux_room
aux @ 
 + @ 
if
else
4 aux_room
aux @ 
+ !
r @ 
1 + r !
xx @ 
qx
r @ 
+ !
yy @ 
qy
r @ 
+ !
then
x @ 
xx !
xx @ 
0 + xx !
y @ 
yy !
yy @ 
1 + yy !
xx @ 
aux !
aux @ 
input_cols @ 
 * aux !
aux @ 
yy @ 
 + aux !
aux_room
aux @ 
 + @ 
if
else
3 aux_room
aux @ 
+ !
r @ 
1 + r !
xx @ 
qx
r @ 
+ !
yy @ 
qy
r @ 
+ !
then
l @ 
r @ 
<= 
repeat
xme @ 
aux !
aux @ 
input_cols @ 
 * aux !
aux @ 
yme @ 
 + aux !
aux_room
aux @ 
+ @ 
dir2 !
dir2 @ 
xne @ 
xme @ 
=
if
yne @ 
yme @ 
=
if
dir @ 
then
then
dup 0 =
if
current_job @ 
1 + current_job !
then
